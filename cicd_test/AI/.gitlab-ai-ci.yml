stages:
  - ai-jenkins-trigger

ai-jenkins-trigger:
  stage: ai-jenkins-trigger
  image: badouralix/curl-jq # curl과 jq가 이미 포함된 경량화 이미지
  tags:
    - "ci / cd"
  variables:
    JOB_NAME: "ai-build-test" # 트리거할 작업 이름
    TRIGGER_URL: "$JENKINS_URL/job/$JOB_NAME/buildWithParameters" # 트리거 URL
    TOKEN: "$JENKINS_JOB_TOKEN" # 트리거 토큰

  script: |
    set -euo pipefail

    echo "🚀 Jenkins Job 트리거 중…"
    # 트리거 URL에 트리거 토큰과 브랜치 이름 추가, url 문자열 파싱
    RESPONSE_HEADERS=$(curl -siS -X POST "$TRIGGER_URL" \
      --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
      --data-urlencode "token=$TOKEN" \
      --data-urlencode "BRANCH_NAME=$CI_COMMIT_REF_NAME" \
      --data-urlencode "GIT_REPO_URL=$(echo $CI_REPOSITORY_URL | sed -E 's#https://[^@]+@#https://#')") # 인증 정보만 제거하고 https:// 유지

    # jenkins 빌드 번호 추출
    # Location 헤더에서 "/queue/item/123/" 추출
    QUEUE_PATH=$(echo "$RESPONSE_HEADERS" \
      | grep -i '^Location:' \
      | awk '{print $2}' \
      | sed -E 's#https?://[^/]+(/queue/item/[0-9]+/)#\1#' \
      | tr -d '\r')
    echo "📋 Queue Path: $QUEUE_PATH"

    echo "📡 빌드 번호 대기 중…"
    BUILD_NUMBER=""
    for i in $(seq 1 30); do
      INFO=$(curl -sS \
        --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
        "$JENKINS_URL${QUEUE_PATH}api/json")
      BUILD_NUMBER=$(echo "$INFO" | jq -r '.executable.number // empty')
      if [ -n "$BUILD_NUMBER" ]; then
        echo "✅ 실제 빌드 번호: $BUILD_NUMBER"
        break
      fi
      echo "⏳ 아직 큐 대기 중 ($i)…"
      sleep 2
    done
    if [ -z "$BUILD_NUMBER" ]; then
      echo "❌ 빌드 번호를 가져오지 못했습니다."
      exit 1
    fi

    # 빌드 상태 추적
    echo "🔎 빌드 상태 추적 시작: #$BUILD_NUMBER"
    JOB_API="$JENKINS_URL/job/$JOB_NAME/$BUILD_NUMBER/api/json"
    elapsed=0
    while [ $elapsed -lt 300 ]; do
      RESULT=$(curl -sS \
        --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
        "$JOB_API" \
        | jq -r '.result // "BUILDING"')
      if [ "$RESULT" != "BUILDING" ]; then
        if [ "$RESULT" = "SUCCESS" ]; then
          echo "✅ Jenkins build #$BUILD_NUMBER SUCCESS"
          exit 0
        else
          echo "❌ Jenkins build #$BUILD_NUMBER FAILED: $RESULT"
          echo "=== Jenkins Console (last 100 lines) ==="
          curl -sS \
            --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
            "$JENKINS_URL/job/$JOB_NAME/$BUILD_NUMBER/consoleText" \
          | tail -n 100
          exit 1
        fi
      fi
      echo "⏳ 빌드 진행 중… (${elapsed}s)"
      sleep 10
      elapsed=$((elapsed + 10))
    done

    echo "❌ Jenkins 빌드 대기 시간 초과"
    exit 1
