stages:
  - deploy-ai-server

deploy-ai-server:
  stage: deploy-ai-server
  image: jonz94/rsync-ssh-alpine:3.1.3-6
  tags:
    - "ci / cd"

  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa

  script:
    # 1. 원격 서버에서 .venv 제외하고 ai 디렉토리 정리
    - >-
      ssh -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" 
      "find /home/ubuntu/ai-server/ai -mindepth 1 -not -path '*/.venv*' -delete"

    # 2. 로컬 ai 디렉토리를 .venv 제외하고 rsync 전송
    - >-
      rsync -avz --exclude='.venv' -e "ssh -o StrictHostKeyChecking=no" 
      ./ai/ "$DEPLOY_USER@$DEPLOY_HOST:/home/ubuntu/ai-server/ai/"

    # 3. 원격에서 의존성 설치 및 CUDA OpenCV 연동
    - |
      ssh -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" << 'EOF'
      cd /home/ubuntu/ai-server/ai

      # 가상환경이 없으면 생성
      if [ ! -d ".venv" ]; then
          python3 -m venv .venv --system-site-packages
      fi

      source .venv/bin/activate
      export PATH=$PATH:/home/ubuntu/.local/bin

      # 의존성 설치 (OpenCV 제외)
      uv pip install -e .

      # CUDA OpenCV .so 바이너리 복사
      cp /usr/local/lib/python3.12/dist-packages/cv2/python-3.12/cv2*.so \
         .venv/lib/python3.12/site-packages/
      EOF

    # 4. AI 서버 재시작
    - ssh -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "sudo systemctl restart ai-server"

    - echo "✅ AI 서버 배포 완료"
